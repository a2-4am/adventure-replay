;license:MIT
;(c) 2024 by 4am
;
; shared routines used by all AutomateInput variants
; (automateinput, automateinput.line)
;
; you should include exactly one of those files, and not this file
;

!ifndef AUTO_DRAW_CURSOR {
AUTO_DRAW_CURSOR = 1
}

!ifndef AUTO_TEMP_BUFFER {
AUTO_TEMP_BUFFER = 0
}

AutomateInput
         stx   @x+1
         sty   @y+1
!if AUTO_DRAW_CURSOR = 1 {
         ldy   CH
         lda   #$20
         sta   (BASL), y
}
@automate_offset=*+1
         ldy   #$00                  ; self-modified
         bne   +

         ;Y=0
         tya                         ; clear buffer (in case of partial read)
-        sta   AUTO_BUFFER, y
         iny
         bne   -
!if AUTO_TEMP_BUFFER > 0 {
         jsr   AutoSwapBuffer
}
         jsr   SwapZP

         jsr   PRODOS_MLI            ; open automation file
         !byte CMD_OPEN
         !word parm_auto_open

         jsr   PRODOS_MLI            ; seek
         !byte CMD_SEEK
         !word parm_auto_seek

         jsr   PRODOS_MLI            ; read
         !byte CMD_READ
         !word parm_auto_read

         jsr   CloseAllFiles

         jsr   SwapZP
         inc   parm_auto_seek_hi
         ldy   #$00
!if AUTO_TEMP_BUFFER > 0 {
         jsr   AutoSwapBuffer
}
+
         inc   @automate_offset
@wait_time=*+1
         ldx   #0                    ; self-modified
-        lda   #0
         jsr   ROM_WAIT
         bit   KBD
         bmi   @done
         dex
         bpl   -
         ;A=0
         sta   @wait_time
         lda   AUTO_BUFFER, y
         beq   @done
         ora   #$80
         cmp   #$8D
         bne   +
         ldx   #$20                  ; wait longer after 'pressing' <return>
         stx   @wait_time
+
@x       ldx   #SELF_MODIFIED_BYTE
@y       ldy   #SELF_MODIFIED_BYTE
         rts
@done    jmp   ($3F2)

!if AUTO_TEMP_BUFFER > 0 {
AutoSwapBuffer
;in:     Y=0
;out:    Y=0
-        lda   AUTO_BUFFER, y
         pha
         lda   AUTO_TEMP_BUFFER, y
         sta   AUTO_BUFFER, y
         pla
         sta   AUTO_TEMP_BUFFER, y
         iny
         bne   -
         rts
}

parm_auto_open
         !byte 3
         !word AUTO_FILENAME
         !word PRODOS_BUFFER
         !byte 0
parm_auto_seek
         !byte 2
         !byte 1                     ; refnum (always 1)
         !byte 0                     ; seek offset lo (always 0)
parm_auto_seek_hi
         !byte 0
         !byte 0
parm_auto_read
         !byte 4
         !byte 1
!if AUTO_TEMP_BUFFER > 0 {
         !word AUTO_TEMP_BUFFER
} else {
         !word AUTO_BUFFER
}
         !word $0100                 ; read length (always $100)
         !word 0                     ; actual length
